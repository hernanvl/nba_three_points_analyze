# -*- coding: utf-8 -*-
"""NBA_playoffseason.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VCF0OK1DGgw2q7Exlh4K6aTDG9vJ04yb

##CLEANED DATA PLAYOFFS
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

pd.set_option("display.max_columns", None)  # Show all columns
pd.set_option("display.width", 1000)  # Increase width to prevent line breaks

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv(r"/content/drive/MyDrive/Maestria/MASTER DATA SCIENCE/7. Precourse Python/NBA/Data Lake/NBA_GameLogs_1985-2025plays.csv") #Read the document saved in our Data Lake

print(df.describe())
print(df.head())
print(df.columns)

# Define column name mapping
column_mapping = {
    "GP": "games_played",
    "W": "wins",
    "L": "losses",
    "WIN%": "win_percentage",
    "MIN": "minutes_played",
    "PTS": "points",
    "FGM": "field_goals_made",
    "FGA": "field_goals_attempted",
    "FG_PCT": "field_goal_percentage",
    "FG3M": "three_point_field_goals_made",
    "FG3A": "three_point_field_goals_attempted",
    "FG3_PCT": "three_point_field_goal_percentage",
    "FTM": "free_throws_made",
    "FTA": "free_throws_attempted",
    "FT_PCT": "free_throw_percentage",
    "OREB": "offensive_rebounds",
    "DREB": "defensive_rebounds",
    "REB": "total_rebounds",
    "AST": "assists",
    "TOV": "turnovers",
    "STL": "steals",
    "BLK": "blocks",
    "BLKA": "blocks_against",
    "PF": "personal_fouls",
    "PFD": "personal_fouls_drawn",
    "PLUS_MINUS": "plus_minus"
}

# Rename columns
dfcolumns = df.rename(columns=column_mapping)

# Save modified CSV
dfcolumns.to_csv("dfcolumnsplay.csv", index=False)
print(dfcolumns.columns)

# Select only the specified columns
selected_columns = [
    "SEASON_ID", "TEAM_ID", "TEAM_NAME", "GAME_ID", "GAME_DATE", "MATCHUP",
    "WL", "minutes_played", "field_goals_made", "field_goals_attempted",
    "three_point_field_goals_made", "three_point_field_goals_attempted",
    "free_throws_made", "free_throws_attempted",
    "offensive_rebounds", "defensive_rebounds", "total_rebounds",
    "assists", "steals", "blocks", "turnovers", "personal_fouls",
    "points", "Season"
]
df_selected = dfcolumns[selected_columns]

# type of values

print(df_selected.dtypes)

# data change

df_selected["GAME_DATE"] = pd.to_datetime(df_selected["GAME_DATE"])
print(df_selected.dtypes)
df_selected.to_csv("df_selectedplay.csv", index=False)

print(df_selected.isnull().sum())

"""There is a problem with the data beacause we have thre point field made but not attempted. We decide to eliminate."""

df_selected.describe()

sns.boxplot(x=df_selected['points'])

# filter only the matchs with more than 140 points

df_high_scoring = df_selected[df_selected['points'] > 140]
df_high_scoring

"""The teams score a lot of point, it is a true value, we decide to keep this data."""

# filter only the matchs with lest than 60 points

df_low_scoring = df_selected[df_selected['points'] < 60]
df_low_scoring

"""There are bad score of the teams"""

df_low_tpa = df_selected[df_selected['three_point_field_goals_attempted'] < 2]
df_low_tpa

# the diference where there point field gial made are higger than cero with there point fiels attempted

df_selected['three_point_difference'] = df_selected['three_point_field_goals_attempted'] - df_selected['three_point_field_goals_made']
df_positive_3point_difference = df_selected[df_selected['three_point_difference'] < 0]

print(df_positive_3point_difference[['three_point_field_goals_made', 'three_point_field_goals_attempted', 'three_point_difference']])

#eliminate a column theree_point difference

df_selected = df_selected.drop('three_point_difference', axis=1)
df_selected.columns

df_selected.tail()

df_selected.to_csv("play85_25.csv", index=False)

